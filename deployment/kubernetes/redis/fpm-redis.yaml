---
apiVersion: v1
kind: Secret
metadata:
  name: redis-redis
  labels:
    app: redis
type: Opaque
data:
  redis.requirepass: "XXX"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-redis
  labels:
    app: redis
# data:
# redis
# TCP_BACKLOG:
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ssd
provisioner: kubernetes.io/gce-pd
reclaimPolicy: Retain
parameters:
  type: pd-ssd
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis-redis
  annotations:
    backup.kubernetes.io/deltas: "PT4H P1D P7D P30D"
  labels:
    app: redis-redis
spec:
  storageClassName: ssd
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 10Gi
---
kind: Service
apiVersion: v1
metadata:
  name: redis-redis
  labels:
    app: redis-redis
spec:
  type: NodePort
  selector:
    app: redis
  ports:
    - name: service
      port: 6379
      targetPort: 6379
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-redis
  labels:
    app: redis
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: redis
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: redis-redis
      labels:
        app: redis
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        # [START redis]
        - name: redis
          image: "launcher.gcr.io/google/redis4:4.0"
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/sh", "-c"]
          args:
            [
              "exec redis-server --dir /data --bind 0.0.0.0 --save 900 1 --save 300 10 --save 60 10000 --requirepass $REDIS_REQUIREPASS",
            ]
          ports:
            - name: service
              containerPort: 6397
          volumeMounts:
            - name: redisdata
              mountPath: /data
              subPath: redisdata
          envFrom:
            - configMapRef:
                name: redis-redis
          env:
            - name: REDIS_REQUIREPASS
              valueFrom:
                secretKeyRef:
                  name: redis-redis
                  key: redis.requirepass
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -a $REDIS_REQUIREPASS -h 127.0.0.1 ping"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -a $REDIS_REQUIREPASS -h 127.0.0.1 ping"
            initialDelaySeconds: 20
            periodSeconds: 3
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 16Mi
      # [STOP redis]
      # [START volumes]
      volumes:
        - name: redisdata
          persistentVolumeClaim:
            claimName: redis-redis
        - name: host-sys
          hostPath:
            path: /sys
      # [END volumes]
      # [START init]
      initContainers:
        - name: init-sysctl
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              sysctl -w net.core.somaxconn=8192
              sysctl -w net.ipv4.ip_local_port_range='1024 65535'
          securityContext:
            privileged: true
        - name: disable-thp
          image: busybox
          volumeMounts:
            - name: host-sys
              mountPath: /host-sys
          command:
            [
              "sh",
              "-c",
              "echo never >/host-sys/kernel/mm/transparent_hugepage/enabled",
            ]
      # [END init]

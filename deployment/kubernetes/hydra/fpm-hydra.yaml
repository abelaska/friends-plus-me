---
apiVersion: v1
kind: Secret
metadata:
  name: fpm-hydra-hydra
  labels:
    app: hydra
type: Opaque
data:
  hydra.databaseURL: "XXX"
  hydra.systemSecret: "XXX"
  hydra.cookieSecret: "XXX"
  hydra.forceRootClientCredentials: "XXX"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fpm-hydra-hydra
  labels:
    app: hydra
data:
  # Hydra
  BCRYPT_COST: "10"
  LOG_LEVEL: "debug"
  LOG_FORMAT: ""
  DISABLE_TELEMETRY: "1"
  # OAuth2
  CONSENT_URL: "https://login.friendsplus.me"
  ISSUER: "https://hydra.friendsplus.me"
  AUTH_CODE_LIFESPAN: "10m"
  ID_TOKEN_LIFESPAN: "1h"
  ACCESS_TOKEN_LIFESPAN: "1h"
  CHALLENGE_TOKEN_LIFESPAN: "10m"
  # HTTP
  HTTPS_ALLOW_TERMINATION_FROM: ""
---
kind: Service
apiVersion: v1
metadata:
  name: fpm-hydra-hydra
  labels:
    app: fpm-hydra-hydra
spec:
  type: NodePort
  selector:
    app: hydra
  ports:
    - name: service
      port: 4444
      targetPort: 4444
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fpm-hydra-hydra
  labels:
    app: hydra
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: hydra
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: fpm-hydra-hydra
      labels:
        app: hydra
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        # [START hydra]
        - name: hydra
          image: "oryd/hydra:v0.9.12"
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/sh", "-c"]
          args:
            [
              "env; hydra version; hydra migrate sql ${DATABASE_URL} && hydra host --dangerous-force-http",
            ]
          ports:
            - name: service
              containerPort: 4444
          envFrom:
            - configMapRef:
                name: fpm-hydra-hydra
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: fpm-hydra-hydra
                  key: hydra.databaseURL
            - name: SYSTEM_SECRET
              valueFrom:
                secretKeyRef:
                  name: fpm-hydra-hydra
                  key: hydra.systemSecret
            - name: COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: fpm-hydra-hydra
                  key: hydra.cookieSecret
            - name: FORCE_ROOT_CLIENT_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: fpm-hydra-hydra
                  key: hydra.forceRootClientCredentials
          readinessProbe:
            httpGet:
              path: /health
              port: 4444
            initialDelaySeconds: 8
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 16Mi
        # [STOP hydra]
        # [START cloudsql-proxy]
        - name: cloudsql-proxy
          image: "gcr.io/cloudsql-docker/gce-proxy:1.09"
          imagePullPolicy: "IfNotPresent"
          command:
            [
              "/cloud_sql_proxy",
              "--dir=/cloudsql",
              "-instances=fpm-application:us-central1:db-hydra=tcp:5432",
              "-credential_file=/secrets/cloudsql/credentials.json",
            ]
          volumeMounts:
            - name: cloudsql-hydra-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: cloudsql
              mountPath: /cloudsql
          resources:
            requests:
              cpu: 1m
              memory: 16Mi
        # [END cloudsql-proxy]
      # [START volumes]
      volumes:
        - name: cloudsql-hydra-credentials
          secret:
            secretName: cloudsql-hydra-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
      # [END volumes]

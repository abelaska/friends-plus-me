# compress requests to Elasticsearch
gzip = true
# generate indexing statistics
stats = true
# index statistics into Elasticsearch
index-stats = true
# connect to MongoDB using the following URL
mongo-url = "mongodb://monstache:XXX@127.0.0.1:27017"
# use the following PEM file for connections to MongoDB
# mongo-pem-file = "/path/to/mongoCert.pem"
# disable PEM validation
mongo-validate-pem-file = false
# connect to the Elasticsearch REST API at the following URLs
elasticsearch-urls = ["http://localhost:9200"]
# use the following user name for Elasticsearch basic auth
# elasticsearch-user = "elastic"
# use the following password for Elasticsearch basic auth
# elasticsearch-password = "fpm"
# use 10 go routines concurrently pushing documents to Elasticsearch
elasticsearch-max-conns = 10
# use the following PEM file to connections to Elasticsearch
# elasticsearch-pem-file = "/path/to/elasticCert.pem"
# validate connections to Elasticsearch
# elastic-validate-pem-file = true
# propogate dropped collections in MongoDB as index deletes in Elasticsearch
dropped-collections = true
# propogate dropped databases in MongoDB as index deletes in Elasticsearch
dropped-databases = true
# do not start processing at the beginning of the MongoDB oplog
replay = false
# resume processing from a timestamp saved in a previous run
resume = true
# do not validate that progress timestamps have been saved
resume-write-unsafe = false
# override the name under which resume state is saved
resume-name = "default"
# include documents whose namespace matches the following pattern
# namespace-regex = '^fpm\.(posts|profiles)$'
namespace-regex = '^fpm\.(posts)$'
# exclude documents whose namespace matches the following pattern
# namespace-exclude-regex = '^mydb\.(ignorecollection|\$cmd)$'
# turn on indexing of GridFS file content
# index-files = true
# turn on search result highlighting of GridFS content
file-highlighting = false
# index GridFS files inserted into the following collections
# file-namespaces = ["users.fs.files"]
# print detailed information including request traces
verbose = true
# enable clustering mode
# cluster-name = 'apollo'
# do a full-sync of the following collections
# direct-read-namespaces = ["db.collection", "test.test"]
# do not exit after full-sync, rather continue tailing the oplog
exit-after-direct-reads = false

[[filter]]
namespace = "fpm.posts"
script = """
module.exports = function(doc) {
  return doc.html && doc.html !== '<p></p>';
}
"""

[[script]]
namespace = "fpm.posts"
script = """
module.exports = function(doc) {
  return { html: doc.html };
}
"""

[[filter]]
namespace = "fpm.profiles"
script = """
module.exports = function(doc) {
  return doc.accounts && doc.accounts.length > 0;
}
"""

[[script]]
namespace = "fpm.profiles"
script = """
module.exports = function(doc) {
  return { accounts: doc.accounts.map(function(a) { return { name: a.name };  }) };
}
"""
